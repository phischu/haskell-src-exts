ParseOk (Module (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 2, srcSpanStartColumn = 1, srcSpanEndLine = 6, srcSpanEndColumn = 1}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 2, srcSpanStartColumn = 1, srcSpanEndLine = 2, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 5, srcSpanStartColumn = 1, srcSpanEndLine = 5, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 6, srcSpanStartColumn = 1, srcSpanEndLine = 6, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 6, srcSpanStartColumn = 1, srcSpanEndLine = 6, srcSpanEndColumn = 1}]}) Nothing [LanguagePragma (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 2, srcSpanStartColumn = 1, srcSpanEndLine = 2, srcSpanEndColumn = 23}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 2, srcSpanStartColumn = 1, srcSpanEndLine = 2, srcSpanEndColumn = 13},SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 2, srcSpanStartColumn = 20, srcSpanEndLine = 2, srcSpanEndColumn = 23}]}) [Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 2, srcSpanStartColumn = 14, srcSpanEndLine = 2, srcSpanEndColumn = 19}, srcInfoPoints = []}) "GADTs"]] [] [TypeSig (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 20}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 5, srcSpanEndLine = 4, srcSpanEndColumn = 7}]}) [Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 4}, srcInfoPoints = []}) "one"] (TyForall (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 8, srcSpanEndLine = 4, srcSpanEndColumn = 20}, srcInfoPoints = []}) Nothing (Just (CxSingle (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 8, srcSpanEndLine = 4, srcSpanEndColumn = 15}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 16, srcSpanEndLine = 4, srcSpanEndColumn = 18}]}) (EqualP (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 8, srcSpanEndLine = 4, srcSpanEndColumn = 15}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 10, srcSpanEndLine = 4, srcSpanEndColumn = 11}]}) (TyVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 8, srcSpanEndLine = 4, srcSpanEndColumn = 9}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 8, srcSpanEndLine = 4, srcSpanEndColumn = 9}, srcInfoPoints = []}) "a")) (TyCon (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 12, srcSpanEndLine = 4, srcSpanEndColumn = 15}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 12, srcSpanEndLine = 4, srcSpanEndColumn = 15}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 12, srcSpanEndLine = 4, srcSpanEndColumn = 15}, srcInfoPoints = []}) "Int")))))) (TyVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 19, srcSpanEndLine = 4, srcSpanEndColumn = 20}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 4, srcSpanStartColumn = 19, srcSpanEndLine = 4, srcSpanEndColumn = 20}, srcInfoPoints = []}) "a"))),PatBind (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 5, srcSpanStartColumn = 1, srcSpanEndLine = 5, srcSpanEndColumn = 8}, srcInfoPoints = []}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 5, srcSpanStartColumn = 1, srcSpanEndLine = 5, srcSpanEndColumn = 4}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 5, srcSpanStartColumn = 1, srcSpanEndLine = 5, srcSpanEndColumn = 4}, srcInfoPoints = []}) "one")) Nothing (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 5, srcSpanStartColumn = 5, srcSpanEndLine = 5, srcSpanEndColumn = 8}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 5, srcSpanStartColumn = 5, srcSpanEndLine = 5, srcSpanEndColumn = 6}]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 5, srcSpanStartColumn = 7, srcSpanEndLine = 5, srcSpanEndColumn = 8}, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 5, srcSpanStartColumn = 7, srcSpanEndLine = 5, srcSpanEndColumn = 8}, srcInfoPoints = []}) 1 "1"))) Nothing],[Comment False (SrcSpan {srcSpanFilename = "tests/examples/EqualityConstraints1.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 1, srcSpanEndColumn = 63}) " https://github.com/haskell-suite/haskell-src-exts/issues/91"])
